acct_coord_table 
A Slurm account coordinator is a user who can modify settings for users in that Slurm account. The coordinator can also hold and cancel jobs submitted by other users in the account.
记录某账户下管理员信息
		{ "creation_time", "bigint unsigned not null" },  创建时间
		{ "mod_time", "bigint unsigned default 0 not null" }, 修改时间
		{ "deleted", "tinyint default 0" }, 是否删除
		{ "acct", "tinytext not null" }, 账户名称
		{ "user", "tinytext not null" },  管理员用户名称

acct_table
记录普通账户信息
		{ "creation_time", "bigint unsigned not null" }, 创建时间
		{ "mod_time", "bigint unsigned default 0 not null" },修改时间
		{ "deleted", "tinyint default 0" },是否删除
		{ "name", "tinytext not null" },账户名称
		{ "description", "text not null" },描述
		{ "organization", "text not null" },所属org

clus_res_table
记录资源类型，有个percent_allowed表明是否可以像内存和cpu一样按百分比分配。
		{ "creation_time", "bigint unsigned not null" },创建时间
		{ "mod_time", "bigint unsigned default 0 not null" },修改时间
		{ "deleted", "tinyint default 0" },是否删除
		{ "cluster", "tinytext not null" },集群名称
		{ "res_id", "int not null" },资源id
		{ "percent_allowed", "int unsigned default 0" },是否可以像内存和cpu一样按百分比分配。

cluster_table
记录集群信息
		{ "creation_time", "bigint unsigned not null" },
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0" },
		{ "name", "tinytext not null" }, 集群名称
		{ "control_host", "tinytext not null default ''" }, ctld地址
		{ "control_port", "int unsigned not null default 0" },ctld端口
		{ "last_port", "int unsigned not null default 0" }, 上次使用的端口
		{ "rpc_version", "smallint unsigned not null default 0" }, rpc版本
		{ "classification", "smallint unsigned default 0" }, 
		{ "dimensions", "smallint unsigned default 1" },
		{ "plugin_id_select", "smallint unsigned default 0" }, select算法id
		{ "flags", "int unsigned default 0" },
		{ "federation", "tinytext not null" },
		{ "features", "text not null default ''" },
		{ "fed_id", "int unsigned default 0 not null" },
		{ "fed_state", "smallint unsigned not null" },

convert_version_table
用来辅助版本升级
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "version", "int default 0" },

federation_table
用来记录federation的信息
		{ "creation_time", "int unsigned not null" },
		{ "mod_time", "int unsigned default 0 not null" },
		{ "deleted", "tinyint default 0" },
		{ "name", "tinytext not null" },
		{ "flags", "int unsigned default 0" },

assoc_table
记录association具体信息，和assoc_usage和一个user记录挂钩。
		{ "creation_time", "bigint unsigned not null" },
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0 not null" },
		{ "is_def", "tinyint default 0 not null" },Is this the users default assoc/acct
		{ "id_assoc", "int unsigned not null auto_increment" },id identifing a combination of user-account-cluster(-partition)
		{ "user", "tinytext not null default ''" },user associated to assoc
		{ "acct", "tinytext not null" }, name of account
		{ "partition", "tinytext not null default ''" },optional partition in a cluster associated to association 
		{ "parent_acct", "tinytext not null default ''" },  name of parent account
		{ "lft", "int not null" },lft used for grouping sub associations and jobs as a left most container used with rgt
		{ "rgt", "int not null" }, rgt used for grouping sub associations and jobs as a right most container used with lft
		{ "shares", "int default 1 not null" }, number of shares allocated to association 
		{ "max_jobs", "int default NULL" }, max number of jobs this association can run at one time 
		{ "max_jobs_accrue", "int default NULL" }, max number of jobs this association can have accruing priority time
		{ "min_prio_thresh", "int default NULL" }, Don't reserve resources for pending jobs unless they have a priority equal to or higher than this
		{ "max_submit_jobs", "int default NULL" }, max number of jobs that can be submitted by association 
		{ "max_tres_pj", "text not null default ''" }, max number of cpu minutes this association can allocate per job
		{ "max_tres_pn", "text not null default ''" },max number of cpu minutes this association can allocate per node
		{ "max_tres_mins_pj", "text not null default ''" },max number of cpu minutes this association can having running at one time 
		{ "max_tres_run_mins", "text not null default ''" }, max number of cpu minutes the underlying group of associations can run for
		{ "max_wall_pj", "int default NULL" }, longest time this association can run a job
		{ "grp_jobs", "int default NULL" }, max number of jobs the underlying group of associations can run at one time
		{ "grp_jobs_accrue", "int default NULL" },max number of jobs the underlying group of associations can have accruing priority at one time
		{ "grp_submit_jobs", "int default NULL" },max number of jobs the underlying group of associations can submit at one time
		{ "grp_tres", "text not null default ''" },max number of cpus the  underlying group of associations can allocate at one time 
		{ "grp_tres_mins", "text not null default ''" },max number of cpu minutes the underlying group of associations can run for 
		{ "grp_tres_run_mins", "text not null default ''" },  max number of cpu minutes the underlying group of assoiciations can having running at one time
		{ "grp_wall", "int default NULL" },total time in hours the underlying group of associations can run for
		{ "priority", "int unsigned default NULL" }, association priority
		{ "def_qos_id", "int default NULL" }, Which QOS id is this associations default
		{ "qos", "blob not null default ''" },
		{ "delta_qos", "blob not null default ''" },

id_usage_table 【primary key (id, id_tres, time_start)】
用来存储某一实体资源使用使用情况
		{ "creation_time", "bigint unsigned not null" },
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0 not null" },
		{ "id", "int unsigned not null" }, association/wckey ID
		{ "id_tres", "int default 1 not null" }, Database ID for the TRES
		{ "time_start", "bigint unsigned not null" },  when this record was started
		{ "alloc_secs", "bigint unsigned default 0 not null" }, total amount of secs allocated if used in an accounting_lis

resv_table
		{ "id_resv", "int unsigned default 0 not null" },  id of reservation.
		{ "deleted", "tinyint default 0 not null" },
		{ "assoclist", "text not null default ''" },  comma separated list of associations
		{ "flags", "bigint unsigned default 0 not null" },  flags for reservation.
		{ "nodelist", "text not null default ''" }, list of nodes in reservation
		{ "node_inx", "text not null default ''" }, node index of nodes in reservation
		{ "resv_name", "text not null" }, name of reservation
		{ "time_start", "bigint unsigned default 0 not null"}, start time of reservation
		{ "time_end", "bigint unsigned default 0 not null" }, end time of reservation
		{ "tres", "text not null default ''" },  预定的资源类型
		{ "unused_wall", "double unsigned default 0.0 not null" }, amount of seconds this reservation wasn't used

job_table
		{ "job_db_inx", "bigint unsigned not null auto_increment" }, index in the table
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0 not null" },
		{ "account", "tinytext" }, 账户名
		{ "admin_comment", "text" },
		{ "array_task_str", "text" },
		{ "array_max_tasks", "int unsigned default 0 not null" },
		{ "array_task_pending", "int unsigned default 0 not null" },
		{ "constraints", "text default ''" },
		{ "container", "text" }, OCI Container Bundle path
		{ "cpus_req", "int unsigned not null" }, 请求的cpu数量
		{ "derived_ec", "int unsigned default 0 not null" },
		{ "derived_es", "text" },
		{ "env_hash_inx", "bigint unsigned default 0 not null" }, 记录环境变量的hash 和 job_env_table的主键挂钩
		{ "exit_code", "int unsigned default 0 not null" },
		{ "flags", "int unsigned default 0 not null" },
		{ "job_name", "tinytext not null" }, 任务名称
		{ "id_assoc", "int unsigned not null" }, 分配的job id
		{ "id_array_job", "int unsigned default 0 not null" },
		{ "id_array_task", "int unsigned default 0xfffffffe not null" },
		{ "id_block", "tinytext" },
		{ "id_job", "int unsigned not null" }, 分配的job id
		{ "id_qos", "int unsigned default 0 not null" }， qos策略
		{ "id_resv", "int unsigned not null" }, 对应的resv
		{ "id_wckey", "int unsigned not null" }, 对应的wckey
		{ "id_user", "int unsigned not null" }, 对应的user
		{ "id_group", "int unsigned not null" }，对应的group
		{ "het_job_id", "int unsigned not null" },
		{ "het_job_offset", "int unsigned not null" },
		{ "kill_requid", "int default -1 not null" }, 请求终止的用户uid
		{ "state_reason_prev", "int unsigned not null" }, 上一个状态的理由
		{ "mcs_label", "tinytext default ''" },
		{ "mem_req", "bigint unsigned default 0 not null" }, 请求的内存
		{ "nodelist", "text" }, 节点列表
		{ "nodes_alloc", "int unsigned not null" }, 分配的节点数量
		{ "node_inx", "text" }, 节点编号
		{ "partition", "tinytext not null" }, 分区
		{ "priority", "int unsigned not null" }, 优先级
		{ "script_hash_inx", "bigint unsigned default 0 not null" }, 保存script信息
		{ "state", "int unsigned not null" }, 任务状态
		{ "timelimit", "int unsigned default 0 not null" }, 时间限制
		{ "time_submit", "bigint unsigned default 0 not null" }, 提交时间
		{ "time_eligible", "bigint unsigned default 0 not null" }, 剩余时间
		{ "time_start", "bigint unsigned default 0 not null" }, 开始时间
		{ "time_end", "bigint unsigned default 0 not null" }, 结束时间
		{ "time_suspended", "bigint unsigned default 0 not null" }, 挂起时间
		{ "gres_used", "text not null default ''" }, 使用的gres
		{ "wckey", "tinytext not null default ''" }, 该任务的wckey
		{ "work_dir", "text not null default ''" }, 工作目录
		{ "submit_line", "text" }, 提交的命令行
		{ "system_comment", "text" }, 
		{ "track_steps", "tinyint not null" },
		{ "tres_alloc", "text not null default ''" }, 分配的tres
		{ "tres_req", "text not null default ''" }, 请求的tres

step_table
		{ "job_db_inx", "bigint unsigned not null" },  index in job_able
		{ "deleted", "tinyint default 0 not null" },
		{ "exit_code", "int default 0 not null" }, exit code
		{ "id_step", "int not null" }, job's step number 该step的id
		{ "step_het_comp", "int unsigned default 0xfffffffe not null" },
		{ "kill_requid", "int default -1 not null" }, 请求杀死该step的用户uid
		{ "nodelist", "text not null" }, 分配的节点列表
		{ "nodes_alloc", "int unsigned ot null" },  
		{ "node_inx", "text" }, 节点序号
		{ "state", "smallint unsigned not null" },
		{ "step_name", "text not null" }, step名称
		{ "task_cnt", "int unsigned not null" }, 
		{ "task_dist", "int default 0 not null" },
		{ "time_start", "bigint unsigned default 0 not null" }, 开始时间
		{ "time_end", "bigint unsigned default 0 not null" }, 结束时间
		{ "time_suspended", "bigint unsigned default 0 not null" },
		{ "user_sec", "bigint unsigned default 0 not null" }, 用户态时间s
		{ "user_usec", "int unsigned default 0 not null" },用户态时间us
		{ "sys_sec", "bigint unsigned default 0 not null" }, 内核态时间s
		{ "sys_usec", "int unsigned default 0 not null" }, 内核态时间us
		{ "act_cpufreq", "double unsigned default 0.0 not null" }, contains actual average cpu frequency
		{ "consumed_energy", "bigint unsigned default 0 not null" }, contains energy consumption in joules
		{ "container", "text" }, 
		{ "req_cpufreq_min", "int unsigned default 0 not null" }, 请求的最小cpu频率
		{ "req_cpufreq", "int unsigned default 0 not null" }, 请求的cpu频率
		{ "req_cpufreq_gov", "int unsigned default 0 not null" },请求的最大cpu频率
		{ "submit_line", "text" }, 提交的命令行
		{ "tres_alloc", "text not null default ''" },  分配的资源
		{ "tres_usage_in_ave", "text not null default ''" },   average amount of usage in data
		{ "tres_usage_in_max", "text not null default ''" }, contains max amount of usage in data
		{ "tres_usage_in_max_taskid", "text not null default ''" }, contains task number max was on
		{ "tres_usage_in_max_nodeid", "text not null default ''" }, contains node number max was on 
		{ "tres_usage_in_min", "text not null default ''" }, contains min amount of usage in data
		{ "tres_usage_in_min_taskid", "text not null default ''" }, contains task number min was on
		{ "tres_usage_in_min_nodeid", "text not null default ''" }, contains node number min was on 
		{ "tres_usage_in_tot", "text not null default ''" },  total amount of usage in data 
		{ "tres_usage_out_ave", "text not null default ''" }, average amount of usage out data
		{ "tres_usage_out_max", "text not null default ''" }, contains amount of max usage out data 
		{ "tres_usage_out_max_taskid", "text not null default ''" }, contains task number max was on 
		{ "tres_usage_out_max_nodeid", "text not null default ''" }, contains node number max was on
		{ "tres_usage_out_min", "text not null default ''" }, contains amount of min usage out data
		{ "tres_usage_out_min_taskid", "text not null default ''" }, contains task number min was on
		{ "tres_usage_out_min_nodeid", "text not null default ''" }, contains node number min was on 
		{ "tres_usage_out_tot", "text not null default ''" }, total amount of usage out data

event_table
记录集群节点事件信息
		{ "time_start", "bigint unsigned not null" }, Start of period
		{ "time_end", "bigint unsigned default 0 not null" }, End of period
		{ "node_name", "tinytext default '' not null" }, Name of node (only set in a node event)
		{ "cluster_nodes", "text not null default ''" },   node list in cluster during time period (only set in a cluster event)
		{ "reason", "tinytext not null" }, reason node is in state during time period (only set in a node event)
		{ "reason_uid", "int unsigned default 0xfffffffe not null" }, uid of that who set the reason
		{ "state", "int unsigned default 0 not null" }, State of node during time period (only set in a node event)
		{ "tres", "text not null default ''" }, TRES touched by this event

usage_table
记录资源使用情况信息
		{ "creation_time", "bigint unsigned not null" },
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0 not null" },
		{ "id_tres", "int not null" }, Database ID for the TRES
		{ "time_start", "bigint unsigned not null" }, when this record was started
		{ "count", "bigint unsigned default 0 not null" }, Count of TRES on a given cluster, 0 if listed generically
		{ "alloc_secs", "bigint unsigned default 0 not null" }, number of cpu seconds allocated
		{ "down_secs", "bigint unsigned default 0 not null" },  number of cpu seconds down
		{ "pdown_secs", "bigint unsigned default 0 not null" }, number of cpu seconds planned down
		{ "idle_secs", "bigint unsigned default 0 not null" },  number of cpu seconds idle
		{ "plan_secs", "bigint unsigned default 0 not null" }, number of cpu seconds planned
		{ "over_secs", "bigint unsigned default 0 not null" },  number of cpu seconds overcommitted

wckey_table
wckey是用来将属于同一项目但不属于同一账户的用户归类的key
		{ "creation_time", "bigint unsigned not null" },
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0 not null" },
		{ "is_def", "tinyint default 0 not null" }, Is this the users default wckey
		{ "id_wckey", "int unsigned not null auto_increment" }, id identifing a combination of user-wckey-cluster
		{ "wckey_name", "tinytext not null default ''" },  wckey name
		{ "user", "tinytext not null" }, user associated 

qos_table
用来记录某个association qos的详细信息
		{ "creation_time", "bigint unsigned not null" },
		{ "mod_time", "bigint unsigned default 0 not null" },
		{ "deleted", "tinyint default 0" },
		{ "id", "int not null auto_increment" },
		{ "name", "tinytext not null" },
		{ "description", "text" },
		{ "flags", "int unsigned default 0" }, flags for various things to enforce or override other limits
		{ "grace_time", "int unsigned default NULL" }, preemption grace time
		{ "max_jobs_pa", "int default NULL" },  max number of jobs an account can run with this qos at one time 
		{ "max_jobs_per_user", "int default NULL" }, max number of jobs a user can run with this qos at one time
		{ "max_jobs_accrue_pa", "int default NULL" }, max number of jobs an account can have accruing priority time
		{ "max_jobs_accrue_pu", "int default NULL" }, max number of jobs a user can have accruing priority time
		{ "min_prio_thresh", "int default NULL" }, Don't reserve resources for pending jobs unless they have a priority equal to or higher than this。
		{ "max_submit_jobs_pa", "int default NULL" },  max number of jobs an account can submit with this qos at once 
		{ "max_submit_jobs_per_user", "int default NULL" }, max number of jobs a user can submit with this qos at once 
		{ "max_tres_pa", "text not null default ''" },max number of tres this QOS can allocate per account  
		{ "max_tres_pj", "text not null default ''" },max number of tres this qos can allocate per job
		{ "max_tres_pn", "text not null default ''" }, max number of tres this qos can allocate per node
		{ "max_tres_pu", "text not null default ''" }, max number of tres this QOS can allocate per user
		{ "max_tres_mins_pj", "text not null default ''" },  max number of tres minutes this qos can have per job
		{ "max_tres_run_mins_pa", "text not null default ''" }, max number of tres minutes this qos can having running at one time per account, currently this doesn't do anything.
		{ "max_tres_run_mins_pu", "text not null default ''" }, max number of tres minutes this qos can having running at one time, currently this doesn't do anything.
		{ "min_tres_pj", "text not null default ''" }, min number of tres a job can allocate with this qos
		{ "max_wall_duration_per_job", "int default NULL" }, longest time this qos can run a job
		{ "grp_jobs", "int default NULL" }, max number of jobs this qos can run at one time 
		{ "grp_jobs_accrue", "int default NULL" }, max number of jobs this qos can have accruing priority time
		{ "grp_submit_jobs", "int default NULL" }, max number of jobs this qos can submit at one time
		{ "grp_tres", "text not null default ''" }, max number of tres this qos can allocate at one time 
		{ "grp_tres_mins", "text not null default ''" }, max number of tres minutes this qos can run for
		{ "grp_tres_run_mins", "text not null default ''" },  max number of tres minutes this qos can have running at one time
		{ "grp_wall", "int default NULL" }, total time in hours this qos can run for
		{ "preempt", "text not null default ''" }, (bitstr) other qos' this qos can preempt
		{ "preempt_mode", "int default 0" }, See PREEMPT_MODE_* in slurm/slurm.h 
		{ "preempt_exempt_time", "int unsigned default NULL" },  Job run time before becoming eligible for preemption 
		{ "priority", "int unsigned default 0" }, ranged int needs to be a unint for heterogeneous systems
		{ "usage_factor", "double default 1.0 not null" }, factor to apply to usage in this qos
		{ "usage_thres", "double default NULL" }, percent of effective usage of an association when breached will deny pending and new jobs 
              		 { "limit_factor", "double default NULL"}, factor to apply to tres_cnt for associations using this qos

